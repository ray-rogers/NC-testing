--
--
-- Noncommunative testing
-- Using Bill Page's process
--
)clear all
--)set break resume
)expose UnittestCount UnittestAux Unittest
)set break resume
)expose UnittestCount UnittestAux Unittest
)r nc_ini04
--
--
-- Factor check- multiply the supposed factors in list
-- and compare to the XDP polynomial.
--
factorCheck : (XDP,LIST(XDP))-> String
factorCheck(x , y)  ==
  m:=1::XDP;
  for i in y repeat m:=m*(i::XDP) 
  if test(x = m) then (pf:="passed") else (pf:="fail")
--
-- Passing is Failing etc..
-- f_factorCheck factorCheck that should pass and register with statistics.
--
f_factorCheck(x , y)  ==
  pf:=factorCheck(x,y)
  testEquals(pf,"passed")
  pf
--
-- xf_factorCheck is factorCheck that should fail and register with statistics.
xf_factorCheck(x , y)  ==
  pf:=factorCheck(x,y)
  xftestEquals(pf,"passed")
  pf
--
--
-- factorCheck to automate factoring
factorCheck_poly(x) ==
  ff :=factorCheck(x, factor x)
  testEquals(ff,"passed")
  ff
--
-
--
--
--
--)r testsuite_trial
--)r noncommutation_tests
)r Parameter_test.input

statistics()

